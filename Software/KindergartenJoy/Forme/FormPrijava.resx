<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>